{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AlbumsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.BASE_URL = 'https://jsonplaceholder.typicode.com';\n  }\n  getAlbums() {\n    return this.httpClient.get(`${this.BASE_URL}/albums`);\n  }\n  getAlbum(id) {\n    return this.httpClient.get(`${this.BASE_URL}/albums/${id}`);\n  }\n  addAlbum(album) {\n    return this.httpClient.post(`${this.BASE_URL}/albums`, album);\n  }\n  deleteAlbum(id) {\n    return this.httpClient.delete(`${this.BASE_URL}/albums/${id}`);\n  }\n  updateAlbum(albumId, newTitle) {\n    const body = {\n      title: newTitle\n    };\n    console.log(newTitle);\n    return this.httpClient.put(`${this.BASE_URL}/albums/${albumId}`, body);\n  }\n  getAlbumPhotos(id) {\n    return this.httpClient.get(`${this.BASE_URL}/albums/${id}/photos`);\n  }\n  static #_ = this.ɵfac = function AlbumsService_Factory(t) {\n    return new (t || AlbumsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlbumsService,\n    factory: AlbumsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AlbumsService","constructor","httpClient","BASE_URL","getAlbums","get","getAlbum","id","addAlbum","album","post","deleteAlbum","delete","updateAlbum","albumId","newTitle","body","title","console","log","put","getAlbumPhotos","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Desktop\\webdev\\lab6\\src\\app\\_services\\albums.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Album } from '../_models/album-model';\nimport { AlbumPhoto } from '../_models/album-photo-model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlbumsService {\n  BASE_URL = 'https://jsonplaceholder.typicode.com';\n\n  constructor(private httpClient: HttpClient) {}\n\n  getAlbums() {\n    return this.httpClient.get<Album[]>(`${this.BASE_URL}/albums`);\n  }\n\n  getAlbum(id: number) {\n    return this.httpClient.get<Album>(`${this.BASE_URL}/albums/${id}`);\n  }\n\n  addAlbum(album: Album) {\n    return this.httpClient.post<Album>(`${this.BASE_URL}/albums`, album);\n  }\n\n  deleteAlbum(id: number) {\n    return this.httpClient.delete<Album>(`${this.BASE_URL}/albums/${id}`);\n  }\n\n  updateAlbum(albumId: number, newTitle: string) {\n    const body = { title: newTitle };\n    console.log(newTitle);\n    return this.httpClient.put<Album>(\n      `${this.BASE_URL}/albums/${albumId}`,\n      body\n    );\n  }\n\n  getAlbumPhotos(id: number) {\n    return this.httpClient.get<AlbumPhoto[]>(\n      `${this.BASE_URL}/albums/${id}/photos`\n    );\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,QAAQ,GAAG,sCAAsC;EAEJ;EAE7CC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,QAAQ,SAAS,CAAC;EAChE;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,QAAQ,WAAWI,EAAE,EAAE,CAAC;EACpE;EAEAC,QAAQA,CAACC,KAAY;IACnB,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAQ,GAAG,IAAI,CAACP,QAAQ,SAAS,EAAEM,KAAK,CAAC;EACtE;EAEAE,WAAWA,CAACJ,EAAU;IACpB,OAAO,IAAI,CAACL,UAAU,CAACU,MAAM,CAAQ,GAAG,IAAI,CAACT,QAAQ,WAAWI,EAAE,EAAE,CAAC;EACvE;EAEAM,WAAWA,CAACC,OAAe,EAAEC,QAAgB;IAC3C,MAAMC,IAAI,GAAG;MAAEC,KAAK,EAAEF;IAAQ,CAAE;IAChCG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,OAAO,IAAI,CAACb,UAAU,CAACkB,GAAG,CACxB,GAAG,IAAI,CAACjB,QAAQ,WAAWW,OAAO,EAAE,EACpCE,IAAI,CACL;EACH;EAEAK,cAAcA,CAACd,EAAU;IACvB,OAAO,IAAI,CAACL,UAAU,CAACG,GAAG,CACxB,GAAG,IAAI,CAACF,QAAQ,WAAWI,EAAE,SAAS,CACvC;EACH;EAAC,QAAAe,CAAA,G;qBAlCUtB,aAAa,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb3B,aAAa;IAAA4B,OAAA,EAAb5B,aAAa,CAAA6B,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}